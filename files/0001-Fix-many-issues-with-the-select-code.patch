From 3f2dedef10cc360102d72c04d918f11d6f08d72a Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Sat, 31 Oct 2015 19:42:45 +0000
Subject: [PATCH] Fix many issues with the select code

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 basket.py  |  3 +++
 updates.py | 90 ++++++++++++++++++++++++++++++++++++++++----------------------
 2 files changed, 62 insertions(+), 31 deletions(-)

diff --git a/basket.py b/basket.py
index eeecea0..ecc28bb 100644
--- a/basket.py
+++ b/basket.py
@@ -123,6 +123,9 @@ class BasketView(Gtk.Revealer):
     def operation_count(self):
         return len(self.operations)
 
+    def operation_count_type(self, type):
+        return len([x for x in self.operations if self.operations[x] == type])
+
     def forget_package(self, package):
         if package.name in self.operations:
             self.operations.pop(package.name, None)
diff --git a/updates.py b/updates.py
index 8aac662..c0b5d94 100644
--- a/updates.py
+++ b/updates.py
@@ -33,6 +33,14 @@ from widgets import PackageLabel
 class UpdatesView(Gtk.VBox):
 
     window = None
+    revealer = Gtk.Revealer()
+
+    def set_bar_visible(self, v=False):
+        if v:
+            self.revealer.set_transition_type(Gtk.RevealerTransitionType.SLIDE_DOWN)
+        else:
+            self.revealer.set_transition_type(Gtk.RevealerTransitionType.SLIDE_UP)
+        self.revealer.set_reveal_child(v)
 
     def __init__(self, window, packagedb, installdb, basket):
         Gtk.VBox.__init__(self)
@@ -42,21 +50,35 @@ class UpdatesView(Gtk.VBox):
         self.basket = basket
         self.window = window
 
-        updates = len(pisi.api.list_upgradable())
-        if updates > 1:
-            self.toolbar = Gtk.Toolbar()
-            self.pack_start(self.toolbar, False, True, 0)
-
-            sep = Gtk.SeparatorToolItem()
-            sep.set_expand(True)
-            sep.set_draw(False)
-            self.toolbar.add(sep)
-            self.select_all_btn = Gtk.ToolButton("Select All")
-            self.select_all_btn.set_label("Select All")
-            self.select_all_btn.set_is_important(True)
-            self.select_all_btn.set_icon_name("gtk-select-all")
-            self.select_all_btn.connect("clicked", self.select_all)
-            self.toolbar.add(self.select_all_btn)
+        self.revealer = Gtk.Revealer()
+        self.revealer.set_transition_type(Gtk.RevealerTransitionType.SLIDE_DOWN)
+        self.pack_start(self.revealer, False, True, 0)
+
+        self.toolbar = Gtk.Toolbar()
+        self.revealer.add(self.toolbar)
+
+        sep = Gtk.SeparatorToolItem()
+        sep.set_expand(True)
+        sep.set_draw(False)
+        self.toolbar.add(sep)
+
+        self.select_none_btn = Gtk.ToolButton("Deselect All")
+        self.select_none_btn.set_label("Deselect All")
+        self.select_none_btn.set_is_important(True)
+        self.select_none_btn.set_icon_name("edit-clear-all-symbolic")
+        self.select_none_btn.connect("clicked", self.deselect_all)
+        self.toolbar.add(self.select_none_btn)
+        self.toolbar.show_all()
+        self.toolbar.set_no_show_all(True)
+        self.select_none_btn.hide()
+
+        self.select_all_btn = Gtk.ToolButton("Select All")
+        self.select_all_btn.set_label("Select All")
+        self.select_all_btn.set_is_important(True)
+        self.select_all_btn.set_icon_name("edit-select-all-symbolic")
+        self.select_all_btn.connect("clicked", self.select_all)
+        self.toolbar.add(self.select_all_btn)
+        self.select_all_btn.show_all()
         
         self.updates_list = Gtk.ListBox()
                 
@@ -82,6 +104,8 @@ class UpdatesView(Gtk.VBox):
 
         self.pack_start(scroller, True, True, 0)
 
+        self.set_bar_visible(False)
+
         self.refresh_repos()
 
     def do_reset(self):
@@ -99,26 +123,24 @@ class UpdatesView(Gtk.VBox):
         elif operation == 'FORGET':
             self.basket.forget_package(package)
 
+        if self.basket.operation_count_type('UPDATE') > 0:
+            self.select_none_btn.show()
+        else:
+            self.select_none_btn.hide()
+
     def select_all(self, w):
-        updates = pisi.api.list_upgradable()
+        for row in self.updates_list.get_children():
+            child = row.get_child()
 
+            child.mark_status(None)
+            child.interactive_handler(None)
 
-        for child in self.updates_list.get_children():
-            child.destroy()
+    def deselect_all(self, w):
+        for row in self.updates_list.get_children():
+            child = row.get_child()
 
-        for update in updates:
-            old_pkg = self.installdb.get_package(update)
-            new_pkg = self.packagedb.get_package(update)
-            
-            panel = PackageLabel(new_pkg, old_pkg, interactive=True)
-            panel.sig_id = panel.connect('operation-selected', self.op_selected)
-            panel.mark_status('UPDATE')
-            self.basket.update_package(old_pkg, new_pkg)
-            
-            self.updates_list.add(panel)
-            while (Gtk.events_pending()):
-                Gtk.main_iteration()
-            panel.show_all()
+            child.mark_status('UPDATE')
+            child.interactive_handler(None)
 
     def _load_updates(self):
 
@@ -129,6 +151,12 @@ class UpdatesView(Gtk.VBox):
         for child in self.updates_list.get_children():
             child.destroy()
 
+        if len(updates) > 0:
+            self.set_bar_visible(True)
+        else:
+            self.set_bar_visible(False)
+            return
+
         for update in updates:
             old_pkg = self.installdb.get_package(update)
             new_pkg = self.packagedb.get_package(update)
-- 
2.6.2

